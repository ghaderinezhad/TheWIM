}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
# save data
save(WS, file = 'data_figure1.rda')
## Figure 1
g1 <- ggplot(WS) +
geom_raster(aes(x = alpha, y = beta, fill = vallender - stein)) +
guides(fill = guide_legend(title = 'Difference')) +
facet_grid(. ~ mu) +
labs(x = expression(alpha[2]), y = expression(beta[2])) +
geom_vline(xintercept = 2.5, lty = 2) +
geom_hline(yintercept = 2.5, lty = 2)
print(g1)
ggsave('figure1.png', g1, dpi = 300, device = 'png')
#' poisson.GammaGamma.stein
#'
#' bounds on Wasserstein distance between posteriors
#' from Beta(a,b) (p2) vs. Uniform (p1) priors by Stein's method
#'
#' @param n number of observations
#' @param X sum of observations
#' @param a1 alpha parameter of the reference gamma-prior (shape)
#' @param b1 beta parameter of the reference gamma-prior (rate)
#' @param a2 alpha parameter of the second gamma-prior (shape)
#' @param b2 beta parameter of the second gamma-prior (rate)
#' @return exact Wasserstein distance (only for a1 < a2 & b1 > b2 or a1 > a2 & b1 < b2)
#'
poisson.GammaGamma.stein <- function(n, X, a1, b1, a2, b2) {
# Stein's method
d <- (1/(n + b1))*abs(a2 - a1 - (b2 - b1)*((X + a2)/(n + b2)) )
return( d )
}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
# save data
save(WS, file = 'data_figure1.rda')
## Figure 1
g1 <- ggplot(WS) +
geom_raster(aes(x = alpha, y = beta, fill = vallender - stein)) +
guides(fill = guide_legend(title = 'Difference')) +
facet_grid(. ~ mu) +
labs(x = expression(alpha[2]), y = expression(beta[2])) +
geom_vline(xintercept = 2.5, lty = 2) +
geom_hline(yintercept = 2.5, lty = 2)
print(g1)
ggsave('figure1.png', g1, dpi = 300, device = 'png')
#' poisson.GammaGamma.stein
#'
#' bounds on Wasserstein distance between posteriors
#' from Beta(a,b) (p2) vs. Uniform (p1) priors by Stein's method
#'
#' @param n number of observations
#' @param X sum of observations
#' @param a1 alpha parameter of the reference gamma-prior (shape)
#' @param b1 beta parameter of the reference gamma-prior (rate)
#' @param a2 alpha parameter of the second gamma-prior (shape)
#' @param b2 beta parameter of the second gamma-prior (rate)
#' @return exact Wasserstein distance (only for a1 < a2 & b1 > b2 or a1 > a2 & b1 < b2)
#'
poisson.GammaGamma.stein <- function(n, X, a1, b1, a2, b2) {
# Stein's method
d <- (1/(n + b1))*abs(a2 - a1 - (b2 - b1)*((X + a2)/(n + b2)) )
return( d )
}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
# save data
save(WS, file = 'data_figure1.rda')
## Figure 1
g1 <- ggplot(WS) +
geom_raster(aes(x = alpha, y = beta, fill = vallender - stein)) +
guides(fill = guide_legend(title = 'Difference')) +
facet_grid(. ~ mu) +
labs(x = expression(alpha[2]), y = expression(beta[2])) +
geom_vline(xintercept = 2.5, lty = 2) +
geom_hline(yintercept = 2.5, lty = 2)
print(g1)
ggsave('figure1.png', g1, dpi = 300, device = 'png')
rm(list = ls())
library(ggplot2)
lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
et.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
setwd("~/Desktop/Re-do Poisson/Poisson")
rm(list = ls())
library(ggplot2)
#lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
rm(list = ls())
library(ggplot2)
lapply(file.path('Poisson', dir('Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do', dir('Poisson/Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
find(poisson.GammaGamma.stein)
find("poisson.GammaGamma.stein")
getAnywher(poisson.GammaGamma.stein)
getAnywhere(poisson.GammaGamma.stein)
?file.path
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('/Users/fatemehghaderinezhad/Desktop/Re-do Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('Re-do Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('Re-do Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('Re-do Poisson/Poisson/functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('Re-do Poisson/Poisson/functions_Poisson')), functions_Poisson)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('Re-do Poisson/Poisson/functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
getwd()
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('Re-do Poisson/Poisson/functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('Re-do Poisson/Poisson/functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
WS <- data.frame(mu = NA, alpha = NA, beta = NA, stein = NA, vallender = NA)
a  <- 1
for (i in 1:length(mu)) {
for (j in 1:length(alpha)) {
for (k in 1:length(beta)) {
# replicate process S times and average over S replicates
S <- 1000
d <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S) {
x <- rpois(n, mu[i])
X <- sum(x)
d[s,1] <- poisson.GammaGamma.stein(n, X, 2.5, 2.5, alpha[j], beta[k])
d[s,2] <- poisson.GammaGamma.vallender(n, X, 2.5, 2.5, alpha[j], beta[k])$DW
}
WS[a,] <- c(mu[i], alpha[j], beta[k], apply(d, 2, mean))
a      <- a + 1
}
}
}
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
n     <- 10              # sample size (n)
mu    <- c(1, 5, 20, 50) # different means/variances (mu)
alpha <- seq(0, 5, 0.25) # P2: alpha
beta  <- seq(0, 5, 0.25) # P2: beta
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), source)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), source)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), functions_Poisson)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), data_figure1.rda)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), read.rda)
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), 'data_figure1.rda')
#' Poisson model: simulations for Figure 1
#' comparison of a Gamma(2.5, 2.5) prior with a Gamma(alpha, beta) prior
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson', dir('functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('~/Desktop/Re-do Poisson/Poisson/functions_Poisson', dir('functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
getwd()
library(foreign)
rm(list = ls())
library(ggplot2)
lapply(file.path('functions_Poisson', dir('functions_Poisson')), source)
#setwd("~/Desktop/Re-do Poisson/Poisson")
set.seed( 0 )
